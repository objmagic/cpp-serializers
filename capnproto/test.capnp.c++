// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: test.capnp

#include "test.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<55> b_b11f3695c22ca61e = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     30, 166,  44, 194, 149,  54,  31, 177,
     11,   0,   0,   0,   1,   0,   0,   0,
     86, 151,  87, 178, 195, 228, 213, 234,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 146,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 101, 115, 116,  46,  99,  97, 112,
    110, 112,  58,  82, 101,  99, 111, 114,
    100,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     64,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     61,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     56,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
    105, 100, 115,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 116, 114, 105, 110, 103, 115,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b11f3695c22ca61e = b_b11f3695c22ca61e.words;
#if !CAPNP_LITE
static const uint16_t m_b11f3695c22ca61e[] = {0, 1};
static const uint16_t i_b11f3695c22ca61e[] = {0, 1};
const ::capnp::_::RawSchema s_b11f3695c22ca61e = {
  0xb11f3695c22ca61e, b_b11f3695c22ca61e.words, 55, nullptr, m_b11f3695c22ca61e,
  0, 2, i_b11f3695c22ca61e, nullptr, nullptr, { &s_b11f3695c22ca61e, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<48> b_9664c2f4bd395282 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    130,  82,  57, 189, 244, 194, 100, 150,
     11,   0,   0,   0,   1,   0,   0,   0,
     86, 151,  87, 178, 195, 228, 213, 234,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 162,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 101, 115, 116,  46,  99,  97, 112,
    110, 112,  58,  83, 116, 114, 101,  97,
    109,  73, 100,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     56,   0,   0,   0,   2,   0,   1,   0,
    105, 100, 115,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 109, 112, 111, 110, 101, 110,
    116,  78,  97, 109, 101,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9664c2f4bd395282 = b_9664c2f4bd395282.words;
#if !CAPNP_LITE
static const uint16_t m_9664c2f4bd395282[] = {1, 0};
static const uint16_t i_9664c2f4bd395282[] = {0, 1};
const ::capnp::_::RawSchema s_9664c2f4bd395282 = {
  0x9664c2f4bd395282, b_9664c2f4bd395282.words, 48, nullptr, m_9664c2f4bd395282,
  0, 2, i_9664c2f4bd395282, nullptr, nullptr, { &s_9664c2f4bd395282, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<47> b_fe7ad608b323973b = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     59, 151,  35, 179,   8, 214, 122, 254,
     11,   0,   0,   0,   1,   0,   2,   0,
     86, 151,  87, 178, 195, 228, 213, 234,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 146,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 101, 115, 116,  46,  99,  97, 112,
    110, 112,  58,  82, 111, 111, 116,  73,
    100,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    116,  97, 115, 107, 105, 100,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    107, 101, 121,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_fe7ad608b323973b = b_fe7ad608b323973b.words;
#if !CAPNP_LITE
static const uint16_t m_fe7ad608b323973b[] = {1, 0};
static const uint16_t i_fe7ad608b323973b[] = {0, 1};
const ::capnp::_::RawSchema s_fe7ad608b323973b = {
  0xfe7ad608b323973b, b_fe7ad608b323973b.words, 47, nullptr, m_fe7ad608b323973b,
  0, 2, i_fe7ad608b323973b, nullptr, nullptr, { &s_fe7ad608b323973b, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<91> b_8a9b19a7806966c4 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    196, 102, 105, 128, 167,  25, 155, 138,
     11,   0,   0,   0,   1,   0,   1,   0,
     86, 151,  87, 178, 195, 228, 213, 234,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 210,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 101, 115, 116,  46,  99,  97, 112,
    110, 112,  58,  72, 101, 114, 111, 110,
     68,  97, 116,  97,  84, 117, 112, 108,
    101,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   3,   0,   1,   0,
    104,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     96,   0,   0,   0,   3,   0,   1,   0,
    124,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    121,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116,   0,   0,   0,   3,   0,   1,   0,
    144,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    141,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    140,   0,   0,   0,   3,   0,   1,   0,
    168,   0,   0,   0,   2,   0,   1,   0,
    107, 101, 121,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 111, 111, 116, 115,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     59, 151,  35, 179,   8, 214, 122, 254,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118,  97, 108, 117, 101, 115,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 115, 107,  84,  97, 115, 107,
     73, 100, 115,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_8a9b19a7806966c4 = b_8a9b19a7806966c4.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_8a9b19a7806966c4[] = {
  &s_fe7ad608b323973b,
};
static const uint16_t m_8a9b19a7806966c4[] = {3, 0, 1, 2};
static const uint16_t i_8a9b19a7806966c4[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_8a9b19a7806966c4 = {
  0x8a9b19a7806966c4, b_8a9b19a7806966c4.words, 91, d_8a9b19a7806966c4, m_8a9b19a7806966c4,
  1, 4, i_8a9b19a7806966c4, nullptr, nullptr, { &s_8a9b19a7806966c4, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<52> b_83167c6c85b798c1 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    193, 152, 183, 133, 108, 124,  22, 131,
     11,   0,   0,   0,   1,   0,   0,   0,
     86, 151,  87, 178, 195, 228, 213, 234,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 234,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 101, 115, 116,  46,  99,  97, 112,
    110, 112,  58,  72, 101, 114, 111, 110,
     68,  97, 116,  97,  84, 117, 112, 108,
    101,  83, 101, 116,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     68,   0,   0,   0,   2,   0,   1,   0,
    115, 116, 114, 101,  97, 109,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    130,  82,  57, 189, 244, 194, 100, 150,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 117, 112, 108, 101, 115,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    196, 102, 105, 128, 167,  25, 155, 138,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_83167c6c85b798c1 = b_83167c6c85b798c1.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_83167c6c85b798c1[] = {
  &s_8a9b19a7806966c4,
  &s_9664c2f4bd395282,
};
static const uint16_t m_83167c6c85b798c1[] = {0, 1};
static const uint16_t i_83167c6c85b798c1[] = {0, 1};
const ::capnp::_::RawSchema s_83167c6c85b798c1 = {
  0x83167c6c85b798c1, b_83167c6c85b798c1.words, 52, d_83167c6c85b798c1, m_83167c6c85b798c1,
  2, 2, i_83167c6c85b798c1, nullptr, nullptr, { &s_83167c6c85b798c1, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace capnp_test {

// Record
#ifndef _MSC_VER
constexpr uint16_t Record::_capnpPrivate::dataWordSize;
constexpr uint16_t Record::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind Record::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Record::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Record::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// StreamId
#ifndef _MSC_VER
constexpr uint16_t StreamId::_capnpPrivate::dataWordSize;
constexpr uint16_t StreamId::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind StreamId::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* StreamId::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* StreamId::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// RootId
#ifndef _MSC_VER
constexpr uint16_t RootId::_capnpPrivate::dataWordSize;
constexpr uint16_t RootId::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind RootId::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* RootId::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* RootId::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// HeronDataTuple
#ifndef _MSC_VER
constexpr uint16_t HeronDataTuple::_capnpPrivate::dataWordSize;
constexpr uint16_t HeronDataTuple::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind HeronDataTuple::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* HeronDataTuple::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* HeronDataTuple::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// HeronDataTupleSet
#ifndef _MSC_VER
constexpr uint16_t HeronDataTupleSet::_capnpPrivate::dataWordSize;
constexpr uint16_t HeronDataTupleSet::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind HeronDataTupleSet::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* HeronDataTupleSet::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* HeronDataTupleSet::_capnpPrivate::brand;
#endif  // !CAPNP_LITE


}  // namespace

